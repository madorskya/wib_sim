---------------------------------------------------------------------------------
-- Address decode logic for IPbus fabric.
--
-- This file has been AUTOGENERATED from the address table - do not
-- hand edit.
--
-- We assume the synthesis tool is clever enough to recognise
-- exclusive conditions in the if statement.
---------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

package ipbus_decode_udp_core_ctrl_mmap_ipb is

-- START automatically generated VHDL (Thu Oct 12 15:10:47 2023)
  constant IPBUS_SEL_WIDTH: positive := 3;
-- END automatically generated VHDL

  subtype ipbus_sel_t is std_logic_vector(IPBUS_SEL_WIDTH - 1 downto 0);
  function ipbus_sel_udp_core_ctrl_mmap_ipb(addr : in std_logic_vector(31 downto 0)) return ipbus_sel_t;

-- START automatically generated VHDL (Thu Oct 12 15:10:47 2023)
  constant N_SLV_SRC_ADDR_CTRL: integer := 0;
  constant N_SLV_CTRL: integer := 1;
  constant N_SLV_RX_PACKET_COUNTERS: integer := 2;
  constant N_SLV_TX_PACKET_COUNTERS: integer := 3;
  constant N_SLV_ID_STAT: integer := 4;
  constant N_SLAVES: integer := 5;
-- END automatically generated VHDL

end ipbus_decode_udp_core_ctrl_mmap_ipb;

package body ipbus_decode_udp_core_ctrl_mmap_ipb is

  function ipbus_sel_udp_core_ctrl_mmap_ipb(addr : in std_logic_vector(31 downto 0)) return ipbus_sel_t is
    variable sel: ipbus_sel_t;
  begin

-- START automatically generated VHDL (Thu Oct 12 15:10:47 2023)
    if    std_match(addr, "-------------------------0001---") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_SRC_ADDR_CTRL, IPBUS_SEL_WIDTH)); -- src_addr_ctrl / base 0x00000008 / mask 0x00000078
    elsif std_match(addr, "-------------------------001----") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_CTRL, IPBUS_SEL_WIDTH)); -- ctrl / base 0x00000010 / mask 0x00000070
    elsif std_match(addr, "-------------------------0100---") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_RX_PACKET_COUNTERS, IPBUS_SEL_WIDTH)); -- rx_packet_counters / base 0x00000020 / mask 0x00000078
    elsif std_match(addr, "-------------------------0110---") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_TX_PACKET_COUNTERS, IPBUS_SEL_WIDTH)); -- tx_packet_counters / base 0x00000030 / mask 0x00000078
    elsif std_match(addr, "-------------------------1000---") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_ID_STAT, IPBUS_SEL_WIDTH)); -- id_stat / base 0x00000040 / mask 0x00000078
    else
        sel := ipbus_sel_t(to_unsigned(N_SLAVES, IPBUS_SEL_WIDTH));
    end if;
-- END automatically generated VHDL

    return sel;

  end function ipbus_sel_udp_core_ctrl_mmap_ipb;

end ipbus_decode_udp_core_ctrl_mmap_ipb;

---------------------------------------------------------------------------------
